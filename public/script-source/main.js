// Generated by CoffeeScript 1.6.3
var sceneDefine, sceneSync, svg, syncInit, util, viewport;

util = require('./util');

console.log('javascript main started');

svg = {};

viewport = null;

sceneDefine = function() {
  var boxBlock;
  boxBlock = function(numberOfBoxes) {
    var box, colorScale, colorTransition, newElement, _i, _ref, _results;
    colorScale = d3.scale.linear().domain([0, numberOfBoxes - 1]).range(['#87CEFA', '#00BFFF']);
    colorTransition = function(i) {
      return function() {
        return d3.select(this).transition().duration(25).ease('circle').style('fill', colorScale(i));
      };
    };
    svg.boxes = [];
    _results = [];
    for (box = _i = 0, _ref = numberOfBoxes - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; box = 0 <= _ref ? ++_i : --_i) {
      newElement = svg.main.append('rect').style('fill', colorScale(box)).style('stroke-width', '0px').style('stroke', 'black').on('mouseover', function() {
        return d3.select(this).transition().duration(300).ease('circle').style('fill', '#0086B2');
      }).on('mouseout', colorTransition(box));
      _results.push(svg.boxes[box] = {
        'element': newElement
      });
    }
    return _results;
  };
  svg.main = d3.select('body').append('svg');
  return boxBlock(6);
};

sceneSync = function() {
  var boxH, i, totalH, _i, _j, _ref, _ref1, _results;
  viewport = util.getViewport();
  console.dir(viewport);
  svg.main.attr('width', viewport.width).attr('height', viewport.height).style('background-color', '#222222');
  totalH = viewport.height;
  boxH = totalH / svg.boxes.length;
  for (i = _i = 0, _ref = svg.boxes.length - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {
    svg.boxes[i].x1 = -20;
    svg.boxes[i].y1 = Math.floor(boxH * i) - 0.5;
    svg.boxes[i].x2 = 200;
    if (i === svg.boxes.length - 1) {
      svg.boxes[i].y2 = totalH + 0.5;
    } else {
      svg.boxes[i].y2 = Math.floor(boxH * (i + 1)) - 0.5;
    }
    console.log(svg.boxes[i].y1);
    console.log(svg.boxes[i].y2);
    console.log('---');
    svg.boxes[i].y1;
  }
  _results = [];
  for (i = _j = 0, _ref1 = svg.boxes.length - 1; 0 <= _ref1 ? _j <= _ref1 : _j >= _ref1; i = 0 <= _ref1 ? ++_j : --_j) {
    _results.push(svg.boxes[i].element.attr('x', svg.boxes[i].x1).attr('width', util.calcLength(svg.boxes[i].x1, svg.boxes[i].x2)).attr('y', svg.boxes[i].y1).attr('height', util.calcLength(svg.boxes[i].y1, svg.boxes[i].y2)).attr('rx', 20).attr('ry', 10));
  }
  return _results;
};

syncInit = function() {
  sceneSync();
  return window.onresize = function() {
    return sceneSync();
  };
};

sceneDefine();

syncInit();

/*
svg.main.append('circle')
    .style('stroke', 'gray')
    .style('fill', 'white')
    .attr('r', 40)
    .attr('cx', 50)
    .attr('cy', 50)
    .on('mouseover', () -> d3.select(this).style('fill', 'aliceblue'))
    .on('mouseout', () -> d3.select(this).style('fill', 'white'));
*/

