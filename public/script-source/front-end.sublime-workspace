{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"length",
				"lengthFrom"
			],
			[
				"text",
				"textPort"
			],
			[
				"disa",
				"display"
			],
			[
				"cate",
				"categorizedTextTreeInput"
			],
			[
				"categori",
				"categorizedTextTree"
			],
			[
				"cateo",
				"categorizedTextTree"
			],
			[
				"catego",
				"categorizedText"
			],
			[
				"chil",
				"children"
			],
			[
				"chi",
				"childrenGeometry"
			],
			[
				"child",
				"childrenGeometry"
			],
			[
				"tex",
				"textHeight"
			],
			[
				"paren",
				"parentGeometryInner"
			],
			[
				"parent",
				"parentGeometry"
			],
			[
				"paret",
				"parentGeometry"
			],
			[
				"visible",
				"visibleChildren"
			],
			[
				"visibl",
				"visibleChildren"
			],
			[
				"any",
				"anySelected"
			],
			[
				"sca",
				"scaleEnd"
			],
			[
				"scal",
				"scaleStart"
			],
			[
				"prop",
				"propertiesToTransition"
			],
			[
				"base",
				"baseColor"
			],
			[
				"vis",
				"viewStatus"
			],
			[
				"hei",
				"heightRatio"
			],
			[
				"navB",
				"navBarsData"
			],
			[
				"sc",
				"sceneHookSvg"
			],
			[
				"glob",
				"globalDims"
			],
			[
				"rec",
				"recolor"
			],
			[
				"neu",
				"neutralColor"
			],
			[
				"title",
				"titlePort"
			],
			[
				"gropu",
				"groupH"
			],
			[
				"all",
				"allocatedH"
			],
			[
				"pa",
				"paddingX"
			],
			[
				"pad",
				"paddingX"
			],
			[
				"l",
				"lHeight"
			],
			[
				"segment",
				"segments"
			],
			[
				"space",
				"spaceWidth"
			],
			[
				"paddin",
				"paddingX"
			],
			[
				"att",
				"attributesToTransition"
			],
			[
				"textpor",
				"textPortInnerSVG"
			],
			[
				"textp",
				"textPortBoundary"
			],
			[
				"scenne",
				"sceneSync"
			],
			[
				"TOC",
				"TOCTextPort"
			],
			[
				"ri",
				"rightPane"
			]
		]
	},
	"buffers":
	[
		{
			"file": "globalDims.coffee",
			"settings":
			{
				"buffer_size": 213,
				"line_ending": "Unix"
			}
		},
		{
			"file": "session.coffee",
			"settings":
			{
				"buffer_size": 19,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Searching 47 files for \"textportinnersvg.sub\"\n\n/home/matan/ingi/repos/wireframe/public/script-source/textportFluent.coffee:\n   16    console.log scroll\n   17    if scroll?\n   18:     sceneObject.textPortInnerSVG.subElement.attr('y',0).transition().duration(500)\n   19      return\n   20  \n   ..\n   44    sceneObject.textPortInnerSVG.element = sceneHook.svg.append('svg')\n   45  \n   46:   sceneObject.textPortInnerSVG.subElement = sceneObject.textPortInnerSVG.element.append('g')\n   47                                   .style('text-anchor', 'start')\n   48                                   .style('fill', 'rgb(255,255,220)')                                                                                                                                            \n   ..\n   51  \n   52    # get the width of a space character\n   53:   spaceWidth = textDraw.tokenToViewable('a a', sceneObject.textPortInnerSVG.subElement).width - \n   54:                textDraw.tokenToViewable('aa', sceneObject.textPortInnerSVG.subElement).width\n   55    spaceWidth *= 1.4  # to make it more spacious akin to line justified text spacing \n   56    # get the maximum character height in the font\n   57:   lHeight    = textDraw.tokenToViewable('l', sceneObject.textPortInnerSVG.subElement).height\n   58  \n   59    paddingX = 20\n   ..\n   76        for token in sentence.text\n   77  \n   78:         tokenViewable = textDraw.tokenToViewable(token.text, sceneObject.textPortInnerSVG.subElement)\n   79          #console.log token.mark\n   80          \n\n/home/matan/ingi/repos/wireframe/public/script-source/textportSegmented.coffee:\n   37    sceneObject.textPortInnerSVG.element = sceneHook.svg.append('svg')\n   38  \n   39:   sceneObject.textPortInnerSVG.subElement = sceneObject.textPortInnerSVG.element.append('g')\n   40                                   .style('text-anchor', 'start')\n   41                                   .style('font-family',fontFamily)\n   ..\n   43  \n   44    # get the width of a space character\n   45:   spaceWidth = textDraw.tokenToViewable('a a', sceneObject.textPortInnerSVG.subElement).width - \n   46:                textDraw.tokenToViewable('aa', sceneObject.textPortInnerSVG.subElement).width\n   47    spaceWidth *= 1.4  # to make it more spacious akin to line justified text spacing \n   48    # get the maximum character height in the font\n   49:   lHeight    = textDraw.tokenToViewable('l', sceneObject.textPortInnerSVG.subElement).height\n   50  \n   51    paddingX = 20\n   ..\n   77  \n   78        # add an svg group element for the segment\n   79:       segment.element = sceneObject.textPortInnerSVG.subElement.append('g')\n   80                                   .style('text-anchor', 'start')\n   81                                   .style('fill', '#EEEEEE')\n   ..\n  158    #\n  159    #if scroll?\n  160:   #  sceneObject.textPortInnerSVG.subElement.transition().duration(...)\n  161   \n\n12 matches across 2 files\n",
			"settings":
			{
				"buffer_size": 2920,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "textDraw.coffee",
			"settings":
			{
				"buffer_size": 1115,
				"line_ending": "Unix"
			}
		},
		{
			"file": "read.coffee",
			"settings":
			{
				"buffer_size": 25038,
				"line_ending": "Unix"
			}
		},
		{
			"file": "navBars.coffee",
			"settings":
			{
				"buffer_size": 13050,
				"line_ending": "Unix"
			}
		},
		{
			"file": "svgUtil.coffee",
			"settings":
			{
				"buffer_size": 2558,
				"line_ending": "Unix"
			}
		},
		{
			"file": "textportFluent.coffee",
			"settings":
			{
				"buffer_size": 4714,
				"line_ending": "Unix"
			}
		},
		{
			"file": "textportSegmented.coffee",
			"settings":
			{
				"buffer_size": 5523,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/matan/ingi/repos/wireframe/mock-data/text.json",
			"settings":
			{
				"buffer_size": 9133,
				"line_ending": "Unix"
			}
		},
		{
			"file": "tokenize.coffee",
			"settings":
			{
				"buffer_size": 1059,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 54.0,
		"selected_items":
		[
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"Package Control: install",
				"Package Control: Install Package"
			],
			[
				"Package Control: ",
				"Package Control: Remove Package"
			],
			[
				"Package Control: insta",
				"Package Control: Install Package"
			],
			[
				"Package Control: In",
				"Package Control: Install Package"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 188.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/home/matan/ingi/repos/wireframe/gitit.sh",
		"/home/matan/ingi/repos/wireframe/newHapp.sh",
		"/home/matan/ingi/repos/wireframe/mock-data/categorized - sent to Ingrid.json",
		"/home/matan/ingi/repos/wireframe/mock-data/categorized by me.json",
		"/home/matan/ingi/repos/wireframe/mock-data/categorized (copy).json",
		"/home/matan/Pictures/read.html",
		"/home/matan/ingi/repos/wireframe/public/script-source/util.coffee",
		"/home/matan/ingi/repos/wireframe/mock-data/categories.json",
		"/home/matan/ingi/repos/wireframe/mock-data/abstract.json",
		"/home/matan/ingi/repos/wireframe/mock-data/categorized.json",
		"/home/matan/ingi/repos/wireframe/public/read.html",
		"/home/matan/ingi/repos/wireframe/mock-data/TOC.json",
		"/home/matan/ingi/repos/wireframe/mock-data/categoriesOfSummary.json",
		"/home/matan/ingi/repos/wireframe/public/script-source/read.js",
		"/home/matan/ingi/repos/wireframe/public/script/util.coffee",
		"/home/matan/ingi/repos/wireframe/public/script/main.coffee",
		"/home/matan/ingi/repos/wireframe/go.js",
		"/home/matan/ingi/repos/wireframe/test.coffee",
		"/home/matan/.config/sublime-text-3/Packages/Better CoffeeScript/CoffeeScript.sublime-settings",
		"/home/matan/.config/sublime-text-3/Packages/User/CoffeeScript.sublime-settings",
		"/home/matan/ingi/repos/wireframe/public/page.html",
		"/home/matan/ingi/repos/wireframe/public/script/main.js",
		"/home/matan/ingi/repos/wireframe/logging.coffee",
		"/home/matan/ingi/repos/wireframe/app.coffee",
		"/home/matan/ingi/repos/wireframe/main.coffee",
		"/home/matan/ingi/repos/wireframe/page.html",
		"/home/matan/.config/sublime-text-3/Packages/User/Preferences.sublime-settings",
		"/home/matan/ingi/repos/wireframe/main.js",
		"/home/matan/ingi/repos/wireframe/util.coffee",
		"/home/matan/ingi/repos/front-end/util.coffee",
		"/home/matan/ingi/repos/wireframe/sample/ShapeHoverEffectSVG/css/demo.css",
		"/home/matan/ingi/repos/wireframe/sample/ShapeHoverEffectSVG/js/hovers.js",
		"/home/matan/ingi/repos/wireframe/sample/ShapeHoverEffectSVG/css/component.css",
		"/home/matan/ingi/repos/wireframe/sample/ShapeHoverEffectSVG/css/normalize.css"
	],
	"find":
	{
		"height": 39.0
	},
	"find_in_files":
	{
		"height": 108.0,
		"where_history":
		[
			"*.coffee",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"textportinnersvg.sub",
			"textportrefresh",
			"scroll",
			"redraw",
			"downbutton",
			"sceneobject.fontsize",
			"sceneobject",
			"svgHookPoint",
			"svghookp",
			"sceneobject",
			"scene",
			"navBarHook",
			"navbars",
			"append",
			"toc.redraw",
			"toc()",
			"TOC",
			"navbars",
			"toc.redraw",
			"for token in TOCTokens",
			"toc.redraw",
			"redraw",
			"subelement",
			"toc-on",
			"sceneObject.TOC.subElement",
			"sceneObject.TOC.redraw",
			"sceneObject.toc",
			"toc.redraw",
			"TOC.subElement",
			"console",
			"highlighting word",
			"console",
			"TOC.redraw",
			"sceneObject.TOC.redraw",
			"rightpane",
			"toc.redraw",
			"states.right",
			"toc-invi",
			"toc-invi'",
			"toc-invi",
			"states.rightPan",
			"states.rightpan",
			"states.rightpane",
			"states.rightPane",
			"states.sidePanes.toc",
			"states.",
			"states.showTOC",
			"states",
			".show",
			".shotoc",
			"states.",
			"sceneObject.TOC.redraw",
			"states.showTOC",
			"sceneObject.rightPane.geometry.width",
			"middle",
			"\n",
			"visible",
			"font-size",
			"textRectFactory",
			"999900",
			"svg",
			"\"",
			"textrectfac",
			"textrectfact",
			"rightpane",
			"hoverIgnoreAreaX",
			"mouseover",
			"mouseouver",
			">,",
			"tenet",
			"texttoken",
			"segments",
			"the relation",
			"textportrefresh",
			"mousedown",
			"fontsize",
			"- 2",
			"token",
			"tokens",
			"mark",
			"tokens.push \n        'text': textArray[t],\n        'mark': markeringCodes[t]\n    ",
			"tokens",
			"textportRefresh",
			"sceneObject.textPort",
			"textport",
			"segments",
			"selected",
			"select()",
			"select",
			"selected",
			"select()",
			"select",
			"getCategoryText",
			"searchCategories",
			"getCategoryText",
			"select",
			": select",
			"= select",
			"select()",
			"initialViewStatus",
			"textportrefresh",
			"select()",
			"bar.viewstatus",
			"sessionset",
			"textportrefresh",
			"setDisplayType",
			"setdisplay",
			"textportRefresh",
			"textportSegmented",
			"textportFluent",
			"getCategoryText",
			".selected",
			".selection",
			"session.selection",
			"session.",
			"export",
			"navbar",
			"textportFluent",
			"textportSegmented",
			"session.selected",
			"setdisplay",
			"session.selected = bar",
			"select",
			"setdisp",
			"session.selected",
			"chooseDisplay",
			"display",
			"scroll"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"states.rightPane",
			"states.sidePanes.toc",
			"'",
			"sessionSetDisplayType",
			"navBars.textportRefresh",
			"setDisplayType",
			"textportFluent",
			"textportSegmented",
			"categorizedTextTree",
			"navBarsTree",
			"barUnselect",
			"parentGeometryInner",
			"'",
			"parentGeometry",
			"coreH",
			"bar.viewStatus",
			"sceneHook.svg",
			"sceneHookSvg",
			"tokenViewable.svg",
			"tokenViewable.SVG",
			"textPortInnerSVG",
			"textPortInnerSVGObject",
			"sceneObject.",
			"#console",
			"title",
			"titleForeignContainer",
			"level2",
			"level1",
			"level3",
			"categoriesOfSummaryPanes",
			"elements",
			"categoriesOfSummaryBlock",
			"groupH",
			"allocatedH",
			"categoriesBlock",
			"svg.categories",
			"segments.spacingY",
			"categoriesOfSummary",
			"TOC.subElement",
			"TOC.element",
			"svg.textPortInnerSVG.subElement",
			"svg.textPortInnerSVG.element",
			"svg.textPortInnerSVG",
			":",
			"svg.textPort.element",
			"svg.textPortBoundary.element",
			"layout.separator.left.x.current",
			".y",
			"layout.separator.top.y",
			"TOC"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 7,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "globalDims.coffee",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 213,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Better CoffeeScript/CoffeeScript.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "session.coffee",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 19,
						"regions":
						{
						},
						"selection":
						[
							[
								19,
								19
							]
						],
						"settings":
						{
							"auto_name": "",
							"syntax": "Packages/Better CoffeeScript/CoffeeScript.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 2,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2920,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										195,
										215
									],
									[
										399,
										419
									],
									[
										890,
										910
									],
									[
										993,
										1013
									],
									[
										1240,
										1260
									],
									[
										1441,
										1461
									],
									[
										1711,
										1731
									],
									[
										2060,
										2080
									],
									[
										2163,
										2183
									],
									[
										2410,
										2430
									],
									[
										2590,
										2610
									],
									[
										2829,
										2849
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 1,
							"result_base_dir": "",
							"result_file_regex": "^([A-Za-z\\\\/<].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "textDraw.coffee",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1115,
						"regions":
						{
						},
						"selection":
						[
							[
								410,
								410
							]
						],
						"settings":
						{
							"syntax": "Packages/Better CoffeeScript/CoffeeScript.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "read.coffee",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 25038,
						"regions":
						{
						},
						"selection":
						[
							[
								14749,
								14749
							]
						],
						"settings":
						{
							"syntax": "Packages/Better CoffeeScript/CoffeeScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 7405.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "navBars.coffee",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 13050,
						"regions":
						{
						},
						"selection":
						[
							[
								2377,
								2377
							]
						],
						"settings":
						{
							"syntax": "Packages/Better CoffeeScript/CoffeeScript.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 1478.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "svgUtil.coffee",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2558,
						"regions":
						{
						},
						"selection":
						[
							[
								2066,
								2066
							]
						],
						"settings":
						{
							"syntax": "Packages/Better CoffeeScript/CoffeeScript.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 897.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "textportFluent.coffee",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4714,
						"regions":
						{
						},
						"selection":
						[
							[
								848,
								848
							]
						],
						"settings":
						{
							"syntax": "Packages/Better CoffeeScript/CoffeeScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "textportSegmented.coffee",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5523,
						"regions":
						{
						},
						"selection":
						[
							[
								3119,
								3119
							]
						],
						"settings":
						{
							"syntax": "Packages/Better CoffeeScript/CoffeeScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1862.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "/home/matan/ingi/repos/wireframe/mock-data/text.json",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9133,
						"regions":
						{
						},
						"selection":
						[
							[
								8052,
								8052
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JSON.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 66.0,
						"translation.y": 1955.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "tokenize.coffee",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1059,
						"regions":
						{
						},
						"selection":
						[
							[
								561,
								561
							]
						],
						"settings":
						{
							"syntax": "Packages/Better CoffeeScript/CoffeeScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 39.0
	},
	"input":
	{
		"height": 40.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.948967951572,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 33.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"project": "front-end.sublime-project",
	"replace":
	{
		"height": 72.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 269.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
